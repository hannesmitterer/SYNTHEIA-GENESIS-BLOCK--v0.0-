---
name: Build, Deploy Kernel and Website

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc build-essential

      - name: Build kernel
        run: |
          gcc src/main.c -o kernel
          ls -la kernel

      - name: Package kernel
        run: |
          tar -czvf kernel.tar.gz kernel
          ls -la kernel.tar.gz

      - name: Detect and analyze website files
        run: |
          echo "=== Website Detection and Analysis ==="
          python3 scripts/website_detector.py --verbose --output website_analysis.json

      - name: Integrate website for GitHub Pages
        run: |
          echo "=== Website Integration ==="
          python3 scripts/website_integrator.py --verbose --analysis-file website_analysis.json

      - name: Verify GitHub Pages files
        run: |
          echo "=== GitHub Pages Files ==="
          ls -la index.html .nojekyll
          echo "=== Index.html preview (first 20 lines) ==="
          head -20 index.html

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: |
            kernel
            kernel.tar.gz

      - name: Setup GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/configure-pages@v3

      - name: Upload GitHub Pages artifact
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Create Release (on main branch only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.sha }}
          release_name: Kernel Release ${{ github.sha }}
          body: |
            Automated kernel build and website deployment.

            ## Changes
            - Built from commit: ${{ github.sha }}
            - Kernel compiled successfully
            - Package: kernel.tar.gz
            - Website deployed to GitHub Pages: ${{ steps.deployment.outputs.page_url }}

            ## Manual Build Instructions
            ```sh
            gcc src/main.c -o kernel
            tar -czvf kernel.tar.gz kernel
            ```

            ## Website Integration
            - Automated website detection and analysis
            - GitHub Pages deployment with custom index.html
            - Responsive design with kernel project showcase
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kernel.tar.gz
          asset_name: kernel.tar.gz
          asset_content_type: application/gzip
